{
  "cells": [
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "0",
      "value": "import \"../styles/globals.scss\";\nimport \"../styles/fonts.scss\";\n\nimport type { AppProps } from \"next/app\";\n",
      "kind": 2,
      "metadata": {
        "id": 0,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "1",
      "value": "import SSRProvider from \"react-bootstrap/SSRProvider\";\n\nimport { alchemyProvider } from \"wagmi/providers/alchemy\";\n",
      "kind": 2,
      "metadata": {
        "id": 1,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "2",
      "value": "\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\n",
      "kind": 2,
      "metadata": {
        "id": 2,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "3",
      "value": "import { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\n",
      "kind": 2,
      "metadata": {
        "id": 3,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "4",
      "value": "import { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\n",
      "kind": 2,
      "metadata": {
        "id": 4,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "5",
      "value": "import { mainnet, goerli } from \"wagmi/chains\";\n",
      "kind": 2,
      "metadata": {
        "id": 5,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "6",
      "value": "import { configureChains, createClient, WagmiConfig } from \"wagmi\";\n",
      "kind": 2,
      "metadata": {
        "id": 6,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "7",
      "value": "\nimport Head from \"next/head\";\n\nconst PROJECT_ID = \"afb10f134401c95e32e266f2f343cca3\";\nconst PROJECT_NAME = \"The OM Pub\";\n\nconst CHAIN_ID = parseInt(process.env.CHAIN_ID!);\nlet chain = null;\nif (CHAIN_ID == 1) {\n  chain = mainnet;\n} else if (CHAIN_ID == 5) {\n  chain = goerli;\n}\n",
      "kind": 2,
      "metadata": {
        "id": 7,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "8",
      "value": "\nconst { chains, provider } = configureChains(\n",
      "kind": 2,
      "metadata": {
        "id": 8,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "9",
      "value": "  [chain!],\n  [alchemyProvider({ apiKey: process.env.ALCHEMY_API_KEY! })]\n",
      "kind": 2,
      "metadata": {
        "id": 9,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "10",
      "value": ");\n\nconst client = createClient({\n  autoConnect: true,\n  connectors: [\n    new MetaMaskConnector({\n      chains,\n    }),\n    new WalletConnectConnector({\n      chains,\n      options: {\n        projectId: PROJECT_ID,\n        showQrModal: true,\n      },\n    }),\n    new CoinbaseWalletConnector({\n      chains,\n      options: {\n        appName: PROJECT_NAME,\n      },\n    }),\n  ],\n  provider,\n});\n",
      "kind": 2,
      "metadata": {
        "id": 10,
        "type": "originalCode"
      }
    },
    {
      "outputs": [],
      "languageId": "unknown",
      "id": "11",
      "value": "\nexport default function App({ Component, pageProps }: AppProps) {\n  pageProps.provider = provider;\n\n  return (\n    <>\n      <Head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Head>\n      <SSRProvider>\n        <WagmiConfig client={client}>\n          <Component {...pageProps} />\n        </WagmiConfig>\n      </SSRProvider>\n    </>\n  );\n}\n",
      "kind": 2,
      "metadata": {
        "id": 11,
        "type": "originalCode"
      }
    }
  ],
  "metadata": {
    "defaultDir": ".boost",
    "sourceFile": "./web/src/pages/_app.tsx"
  }
}